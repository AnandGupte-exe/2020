'''
Trex Run V2

press either button to jump. The objective
is to jump over as many "cactuses" as possible. 
if you hit one you lose. To play again press 
either of the buttons
'''

import random




class led:

    def plot(x,y):
        print("led plotted at ", x, " and ", y)

    def unplot(x,y):
        print("led unplotted at ", x, " and ", y)







def SumOfLst(x):
    a = 0
    for i in range(len(x)):
        a = a + x[i]
    return a

class TrexRun:

    def __init__(self):
        self.PlayerDefaultPos = 1, 3
        self.PlayerJumpPos = 1, 1
        self.GroundHeight = 3
        self.PlayerX = 1
        self.JumpTime = 4
            
    def CactusGen(self, x):
        y = random.randint(0, 5)

        if y == 1 and SumOfLst(x) == 0:
            x.append(1)
        else:
            x.append(0);
        
        x.pop(0)
        return x


    def PlotCactus(self, x):

        for i in range(len(x)):
            if x[i] == 1:
                led.plot(i, self.GroundHeight)
            else:
                led.unplot(i, self.GroundHeight)
    

    def Jump(self, x):
        if x != self.JumpTime:
            x + 1
        else:
            x = 0
        return x
    

    def PlayerPlot(self, x):

        if x == 0:
            led.plot(self.PlayerDefaultPos)
            led.unplot(self.PlayerJumpPos)
        else:
            led.plot(self.PlayerJumpPos)
            led.unplot(self.PlayerDefaultPos)
        

    def IsPlayerDead(self, x, y):
        if x[self.PlayerX] == 1 and y == 0:
            a = True
        else:
            a = False

        return a

T = TrexRun()
MicroBitOn = True
GameEnded = False

while MicroBitOn == True:
    Cactuses = [0,0,0,0,0]
    JumpNum = 0
    PlayerPos = 1, 3
    tick = 200
    score = 0

    while(GameEnded == False):

        Cactuses = T.CactusGen(Cactuses)
        T.PlotCactus(Cactuses)

        if JumpNum > 0:
            JumpNum = T.Jump(JumpNum)

        elif JumpNum == 0:
            if input() == 1 or input() == 2:
                jumpNum = 1
    
        T.PlayerPlot(JumpNum)
        GameEnded = T.IsPlayerDead(Cactuses, JumpNum)

        score = score + 1

        basic.pause(tick)

    basic.show_leds("""
    # . . . #
    . # . # .
    . . # . .
    . # . # .
    # . . . #
    """)

    basic.pause(500)
    basic.show_string("Score: ")
    basic.show_number(Score)    
    if input.button_is_pressed(Button.A) or input.button_is_pressed(Button.B):
        GameEnded = False
